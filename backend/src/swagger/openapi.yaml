openapi: 3.0.0
info:
  title: Evebox Swagger
  description: This is a sample server Evebox server.
  version: 1.0.0
servers:
- url: https://localhost:3001/v1/api/
  description: Local server
tags:
- name: user
  description: Operations about user
paths:
  /api/users/{userId}:
    get:
      tags:
      - user
      summary: Get User Details
      operationId: apiUsersUserIdGET
      parameters:
      - name: Authorization
        in: header
        description: "Bearer token for authorization (e.g., `Bearer <token>`)"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Unauthorized. Token is invalid or missing.
        "403":
          description: Forbidden
        "404":
          description: User Not Found
      x-swagger-router-controller: User
  /api/user/register:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_register_body'
        required: true
      responses:
        "201":
          description: User created successfully
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Bad Request
      x-swagger-router-controller: User
  /api/user/login:
    post:
      tags:
      - user
      summary: Logged user into system
      description: Logged user into system
      operationId: apiUserLoginPOST
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_login_body'
        required: true
      responses:
        "200":
          description: OK
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Invalid username/password
      x-swagger-router-controller: User
  /api/user/logout:
    post:
      tags:
      - user
      summary: Log out current user session
      operationId: apiUserLogoutPOST
      parameters:
      - name: Authorization
        in: header
        description: "Bearer token for authorization (e.g., `Bearer <token>`)"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: User successfully logged out
        "401":
          description: Unauthorized. Token is invalid or missing.
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/user/forgot-password:
    post:
      tags:
      - user
      summary: Send email with link to reset password
      operationId: apiUserForgot_passwordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_forgotpassword_body'
        required: true
      responses:
        "200":
          description: OK. Return link to reset password
        "400":
          description: Bad request. Missing or invalid data
        "404":
          description: User not found
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/user/reset-password:
    post:
      tags:
      - user
      summary: Allows a user to reset their password by providing their email and
        a new password.
      operationId: apiUserReset_passwordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_resetpassword_body'
        required: true
      responses:
        "200":
          description: Password reset successful
        "400":
          description: Bad request. Missing or invalid data
        "404":
          description: User not found
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/user/refresh-token:
    post:
      tags:
      - user
      summary: Create new token
      parameters:
      - name: refresh_token
        in: query
        description: "Refresh token"
        required: true
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_refreshtoken_body'
        "400":
          description: Bad request. Missing or invalid token
      security:
      - bearerAuth: []
      x-swagger-router-controller: User    
  /api/event/front-display:
    get:
      summary: Lấy thông tin hiển thị trên trang chính
      description: Trả về các sự kiện đặc biệt, sự kiện thịnh hành, chỉ có trên Eve và các sự kiện đặc biệt theo danh mục.
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  specialEvents:
                    type: array
                    description: Danh sách các sự kiện đặc biệt.
                    items:
                      $ref: '#/components/schemas/EventObject'
                  trendingEvents:
                    type: array
                    description: Danh sách các sự kiện thịnh hành.
                    items:
                      $ref: '#/components/schemas/EventObject'
                  onlyOnEve:
                    type: array
                    description: Danh sách các sự kiện chỉ có trên Eve.
                    items:
                      $ref: '#/components/schemas/EventObject'
                  "{category}Special":
                    type: object
                    description: Sự kiện đặc biệt theo danh mục.
                    properties:
                      name:
                        type: string
                        description: Tên danh mục.
                      events:
                        type: array
                        items:
                          $ref: '#/components/schemas/EventObject'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          format: varchar(255)
        email:
          type: string
          format: varchar(255)
        password:
          type: string
          format: varchar(255)
        phone:
          type: string
          format: varchar(10)
        role_id:
          type: integer
          format: int32
        area_id:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
    inline_response_200:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          format: varchar(255)
        email:
          type: string
          format: varchar(255)
        phone:
          type: string
          format: varchar(10)
        role_id:
          type: integer
          format: int32
        area_id:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
          example: 2024-11-02T15:30:00Z
      example:
        phone: phone
        role_id: 6
        name: name
        created_at: 2024-11-02T15:30:00Z
        id: 0
        area_id: 1
        email: email
    user_register_body:
      required:
      - name
      - password
      - phone
      - role_id
      type: object
      properties:
        name:
          type: string
          format: varchar(255)
        email:
          type: string
          format: varchar(255)
        password:
          type: string
          format: varchar(255)
        phone:
          type: string
          format: varchar(10)
        role_id:
          type: integer
          format: int32
        area_id:
          type: integer
          format: int32
    inline_response_201:
      type: object
      properties:
        id:
          type: integer
      example:
        id: 0
    user_login_body:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          format: varchar(255)
        password:
          type: string
          format: varchar(255)
    inline_response_200_1:
      type: object
      properties:
        access_token:
          type: string
          format: varchar(255)
        refresh_token:
          type: string
          format: varchar(255)  
      example:
        access_token: token
        refresh_token: token
    user_forgotpassword_body:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          format: varchar(255)
    user_resetpassword_body:
      required:
      - email
      - newPassword
      type: object
      properties:
        email:
          type: string
          format: varchar(255)
        password:
          type: string
          format: varchar(255)
    user_refreshtoken_body:
      required:
      - access_token
      type: object
      properties:
        access_token:
          type: string
          format: varchar(255)
    EventObject:
      type: object
      properties:
        id:
          type: integer
          description: ID của sự kiện.
          example: 1
        title:
          type: string
          description: Tiêu đề của sự kiện.
          example: "Summer Music Festival"
        startDate:
          type: string
          format: date-time
          description: Ngày bắt đầu sự kiện.
          example: "2024-12-15T18:00:00Z"
        endDate:
          type: string
          format: date-time
          description: Ngày kết thúc sự kiện.
          example: "2024-12-16T23:00:00Z"
        organizerId:
          type: string
          description: ID của người tổ chức sự kiện.
          nullable: true
          example: "user123"
        status:
          type: string
          description: Trạng thái của sự kiện.
          example: "active"
        locationId:
          type: integer
          description: ID địa điểm tổ chức sự kiện.
          example: 101
        totalTickets:
          type: integer
          description: Tổng số vé của sự kiện.
          example: 500
        availableTickets:
          type: integer
          description: Số vé còn lại.
          example: 120
        imgLogoId:
          type: integer
          description: ID ảnh logo của sự kiện.
          nullable: true
          example: 25
        imgPosterId:
          type: integer
          description: ID ảnh poster của sự kiện.
          nullable: true
          example: 30
        createdAt:
          type: string
          format: date-time
          description: Thời gian tạo sự kiện.
          example: "2024-01-01T12:00:00Z"
        isOnlyOnEve:
          type: boolean
          description: Sự kiện chỉ có trên nền tảng Eve hay không.
          example: true
        isSpecial:
          type: boolean
          description: Sự kiện đặc biệt hay không.
          example: false
        lastScore:
          type: string
          format: decimal
          description: Điểm cuối cùng của sự kiện (liên quan đến xếp hạng hoặc đánh giá).
          example: "8.75"
        categories:
          type: array
          description: Danh sách các danh mục sự kiện.
          items:
            type: string
          example: ["Music", "Festival"]
        imgLogo:
          type: object
          nullable: true
          description: Thông tin hình ảnh logo.
          $ref: '#/components/schemas/ImageObject'
        imgPoster:
          type: object
          nullable: true
          description: Thông tin hình ảnh poster.
          $ref: '#/components/schemas/ImageObject'
    ImageObject:
      type: object
      properties:
        id:
          type: integer
          description: ID của hình ảnh.
          example: 1
        imageUrl:
          type: string
          description: URL của hình ảnh.
          example: "https://example.com/images/logo.png"
        eventsLogo:
          type: object
          nullable: true
          description: Sự kiện liên kết dưới vai trò logo.
          $ref: '#/components/schemas/EventObject'
        eventsPoster:
          type: object
          nullable: true
          description: Sự kiện liên kết dưới vai trò poster.
          $ref: '#/components/schemas/EventObject'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
