generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

model User {
  id          String        @id @db.VarChar(255)
  name        String        @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  phone       String        @db.VarChar(10)
  password    String        @db.VarChar(255)
  role_id     Int?
  created_at  DateTime      @default(now())

  // Relations
  role         Role?          @relation(fields: [role_id], references: [id])
  userProvince UserProvince[] // Relation to the join table
  refreshTokens RefreshToken[]

  @@map("users")
}

model Role {
  id        Int       @id 
  role_name String    @db.VarChar(50)

  // Relations
  users     User[]

  @@map("role")
}

model Province {
  id         Int           @id 
  name       String        @db.VarChar(100)
  created_at DateTime      @default(now())

  // Relations
  userProvince UserProvince[] // Relation to the join table

  @@map("province")
}

model UserProvince {
  userId     String
  provinceId Int

  // Relations
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  province   Province  @relation(fields: [provinceId], references: [id], onDelete: Cascade)

  @@id([userId, provinceId]) // Composite primary key
  @@map("user_provinces")
}

model RefreshToken {
  id          Int      @id @default(autoincrement())
  token       String   @unique
  email      String
  revoked     Boolean  @default(false)
  expiresAt   DateTime

  user        User     @relation(fields: [email], references: [email], onDelete: Cascade)

  @@map("refresh_tokens")
}

enum OTPType {
  FORGOT_PASSWORD
  REGISTER
}

model Otp {
  id        String   @id
  email     String
  otp       String
  type      OTPType
  requestToken String 
  expiresAt DateTime
  attempts Int
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@unique([requestToken])
  @@index([email])
  @@index([otp])
  @@map("otps")
}
