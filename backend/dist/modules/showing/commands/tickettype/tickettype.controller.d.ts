import { TicketTypeService } from './tickettype.service';
import { CreateTicketTypeDto } from './create-tickettype.dto';
import { UpdateTicketTypeDto } from './update-tickettype.dto';
export declare class TicketTypeController {
    private readonly ticketTypeService;
    constructor(ticketTypeService: TicketTypeService);
    create(dto: CreateTicketTypeDto): Promise<import("oxide.ts").Err<Error> | import("oxide.ts").Ok<{
        id: string;
        description: string;
        status: string;
        name: string;
        imageUrl: string;
        color: string;
        isFree: boolean;
        price: number;
        originalPrice: number;
        maxQtyPerOrder: number;
        minQtyPerOrder: number;
        effectiveFrom: Date;
        effectiveTo: Date | null;
        position: number;
        isHidden: boolean;
        showingId: string;
    }>>;
    findAll(): Promise<import("oxide.ts").Err<Error> | import("oxide.ts").Ok<{
        id: string;
        description: string;
        status: string;
        name: string;
        imageUrl: string;
        color: string;
        isFree: boolean;
        price: number;
        originalPrice: number;
        maxQtyPerOrder: number;
        minQtyPerOrder: number;
        effectiveFrom: Date;
        effectiveTo: Date | null;
        position: number;
        isHidden: boolean;
        showingId: string;
    }[]>>;
    findOne(id: string): Promise<import("oxide.ts").Err<Error> | import("oxide.ts").Ok<{
        id: string;
        description: string;
        status: string;
        name: string;
        imageUrl: string;
        color: string;
        isFree: boolean;
        price: number;
        originalPrice: number;
        maxQtyPerOrder: number;
        minQtyPerOrder: number;
        effectiveFrom: Date;
        effectiveTo: Date | null;
        position: number;
        isHidden: boolean;
        showingId: string;
    }>>;
    update(id: string, dto: UpdateTicketTypeDto): Promise<import("oxide.ts").Err<Error> | import("oxide.ts").Ok<{
        id: string;
        description: string;
        status: string;
        name: string;
        imageUrl: string;
        color: string;
        isFree: boolean;
        price: number;
        originalPrice: number;
        maxQtyPerOrder: number;
        minQtyPerOrder: number;
        effectiveFrom: Date;
        effectiveTo: Date | null;
        position: number;
        isHidden: boolean;
        showingId: string;
    }>>;
    remove(id: string): Promise<import("oxide.ts").Err<Error> | import("oxide.ts").Ok<{
        id: string;
        description: string;
        status: string;
        name: string;
        imageUrl: string;
        color: string;
        isFree: boolean;
        price: number;
        originalPrice: number;
        maxQtyPerOrder: number;
        minQtyPerOrder: number;
        effectiveFrom: Date;
        effectiveTo: Date | null;
        position: number;
        isHidden: boolean;
        showingId: string;
    }>>;
}
